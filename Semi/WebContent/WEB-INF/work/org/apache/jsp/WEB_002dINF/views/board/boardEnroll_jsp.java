/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.44
 * Generated at: 2021-04-14 07:58:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardEnroll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1618244882352L));
    _jspx_dependants.put("/WEB-INF/views/common/footer.jsp", Long.valueOf(1618244998397L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <title>Insert title here</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/css/index.css\" />\r\n");
      out.write("    <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.6.0.js\"></script>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <header>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <section>");
      out.write("\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"http://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.css\"\r\n");
      out.write("\trel=\"stylesheet\" />\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"http://netdna.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- include summernote css/js-->\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.8/summernote.css\"\r\n");
      out.write("\trel=\"stylesheet\" />\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.8/summernote.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"");
      out.print(request.getContextPath());
      out.write("/css/board.css\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h2>게시글 등록</h2>\r\n");
      out.write("<form action=\"");
      out.print(request.getContextPath());
      out.write("/board/boardEnroll\"\r\n");
      out.write("\tmethod=\"post\" id=\"boardEnrollFrm\">\r\n");
      out.write("\r\n");
      out.write("\t<input type=\"text\" name=\"title\" id=\"enroll_title\" placeholder=\"제목을 입력하세요.\" /> \r\n");
      out.write("\t<input type=\"hidden\" name=\"content\" value=\"\" id=\"enroll_content\" />\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- admin부분 추후 접속 로그인 아이디로 변경해야함 -->\r\n");
      out.write("\t<input type=\"hidden\" name=\"writer\" value=\"admin\" id=\"enroll_writer\" />\r\n");
      out.write("\t<div id=\"enroll_summerNoteWrapper\">\r\n");
      out.write("\t\t<div id=\"enroll_summernote\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<input type=\"submit\" value=\"등록\" /> <input type=\"button\" value=\"취소\"\r\n");
      out.write("\t\tonclick=\"cancel()\" />\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t//게시판 에디터 생성\r\n");
      out.write("      $(\"#enroll_summernote\").summernote({\r\n");
      out.write("        width: 1198,\r\n");
      out.write("        height: 500,\r\n");
      out.write("        focus: true,\r\n");
      out.write("        disableResizeEditor: true,\r\n");
      out.write("      });\r\n");
      out.write("      \r\n");
      out.write("\t//submit 처리\r\n");
      out.write("      $(\"#boardEnrollFrm\").submit(function(){\r\n");
      out.write("    \t\t$(\"[name=content]\").val($(\"#enroll_summernote\").summernote('code'));\r\n");
      out.write("\t\t\tvar $title = $(\"[name=title]\").val();\r\n");
      out.write("\t\t\tvar $content = $(\"[name=content]\").val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//제목 유효성 검사\r\n");
      out.write("\t\t\tif(/^.{1,}$/.test($title)==false){\r\n");
      out.write("\t\t\t\talert(\"제목을 입력해주세요!\");\r\n");
      out.write("\t\t\t\t$(\"[name=title]\").focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t//내용 유효성 검사\r\n");
      out.write("\t\t\tif($content.length==0 || $content==\"<p><br></p>\"){\r\n");
      out.write("\t\t\t\talert(\"내용을 입력해주세요!\");\r\n");
      out.write("\t\t\t\t$(\"#enroll_summernote\").summernote(\"focus\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("    \tif(confirm(\"게시글을 등록 하시겠습니까?\")){\r\n");
      out.write("    \t\treturn true;\r\n");
      out.write("    \t}else{\r\n");
      out.write("    \t\treturn false;\r\n");
      out.write("    \t}\r\n");
      out.write("      });\r\n");
      out.write("      \r\n");
      out.write("\t//뒤로가기\r\n");
      out.write("      function cancel(){\r\n");
      out.write("    \t  if(confirm(\"정말 게시글 작성을 중단 하시겠습니까?\")){\r\n");
      out.write("    \t\t  location.href='");
      out.print(request.getContextPath());
      out.write("/board/boardList';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</section>\r\n");
      out.write("    <footer>footer</footer>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
